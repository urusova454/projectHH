services:
  postgresql:
    image: postgres:12.14
    env_file:
      - .env
    security_opt:
      - no-new-privileges:true
    restart: always
    ports:
      - 127.0.0.1:5432:5432
    volumes:
      - hh-project:/var/lib/postgresql/data
    networks:
      - hh-local
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 5s
      timeout: 2s
      retries: 1
    read_only: true
    tmpfs:
      - /var/run/postgresql

  hh-project:
    restart: always
    ports:
      - 127.0.0.1:9999:9999
    env_file:
      - .env
    security_opt:
      - no-new-privileges:true
    build:
      context: .
      dockerfile: Dockerfile
    command: sh -c "python launch.py && python main.py"
    depends_on:

      - postgresql
    networks:
      - hh-local

  redis:
    container_name: redis_container
    image: redis:latest


  celery_worker:
    container_name: celery_worker
    build: .
    command: celery -A celery_worker.celery worker --loglevel=info
    volumes:
      - .:/app
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - hh-project
      - redis

  flower:
    container_name: flower
    build: .
    command: celery -A celery_worker.celery flower --port=5555
    ports:
      - 5556:5555
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - hh-project
      - redis
      - celery_worker


volumes:
  hh-project:
    driver: local

networks:
  hh-local:
    name: hh-local


